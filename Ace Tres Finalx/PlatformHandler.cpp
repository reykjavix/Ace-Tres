#include "MyDirectX.h"
#include "PlatformHandler.h"

extern ofstream debugfile;

extern Reyk* players[];
extern MODEL *platMesh;
extern int currentlevel;

const int NUMPLATFORMS = 42 + 325 + 973 + 8 + 72; //973;

extern int platformsmin;
extern int platformsmax;
extern int gamestatus;

float platformsX[NUMPLATFORMS] = {

	// Level 1
	0, 3000.0, 3500.0, 4000.0, 4930.0, 
	5130.0, 5500.0, 5600.0, 5800.0, 5900.0,
	6000.0, 6100.0, 6300.0, 7100.0, 7800.0,
	8300.0, 8400.0, 8700.0, 8800.0, 8900.0,
	9100.0, 9200.0, 9400.0, 10300.0, 10400.0,
	10700.0, 10800.0, 10900.0, 11000.0, 11100.0,
	11200.0, 11300.0, 11400.0, 11500.0, 11600.0,
	11700.0, 11800.0, 11900.0, 12000.0, 12100.0,
	12200.0, 12300.0,

	//Level 2
	0.0, 100.0, 200.0, 300.0, 400.0,
	500.0, 600.0, 700.0, 800.0, 900.0,
	1000.0, 1100.0, 1200.0, 1300.0, 1400.0,
	1500.0, 1600.0, 1700.0, 1800.0, 1900.0,
	1500.0, 1600.0, 1700.0, 1800.0, 1900.0,
	2000.0, 2100.0, 2200.0, 2300.0,  2400.0,
	2500.0, 2600.0, 2700.0, 2800.0, 2900.0,
	3000.0, 3100.0, 3200.0, 3300.0, 3400.0,
	3500.0, 3600.0, 3700.0, 3800.0, 3900.0,
	4000.0, 4100.0, 4200.0, 4300.0, 4400.0,
	3300.0, 3400.0, 4400.0, 4400.0, 4400.0,
	4400.0, 4400.0, 4400.0, 4400.0, 4400.0,
	4400.0, 4400.0, 4400.0, 4400.0, 4400.0,
	4400.0, 4400.0, 4400.0, 4400.0, 4400.0,
	4400.0, 4400.0, 4400.0, 4400.0, 4400.0,
	3800.0, 3800.0, 3800.0, 3800.0, 3800.0,
	3800.0, 3800.0, 3800.0, 3800.0, 3800.0,
	3800.0, 3800.0, 3800.0, 3800.0, 3800.0,
	3800.0, 3800.0, 3800.0, 3700.0, 3600.0,
	3900.0, 4000.0, 4500.0, 4600.0, 4700.0,
	3900.0, 4000.0, 4200.0, 4300.0, 3900.0,
	4000.0, 4700.0, 4700.0, 4700.0, 4700.0,
	3500.0, 3400.0, 3300.0, 3200.0, 3100.0,
	3000.0, 2900.0, 2800.0, 2700.0, 2600.0,
	2500.0, 2400.0, 2300.0, 2200.0, 2100.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	4700.0, 4700.0, 4700.0, 4600.0, 4500.0,
	4400.0, 4300.0, 4200.0, 4100.0, 4000.0,
	3900.0, 3800.0, 3700.0, 3600.0, 3500.0,
	3400.0, 3300.0, 3200.0, 3100.0, 3000.0,
	2900.0, 2800.0, 2700.0, 2600.0, 2200.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	3400.0, 3400.0, 3400.0, 3400.0, 3400.0,
	3400.0, 3400.0, 3400.0, 3400.0, 3400.0,
	2600.0, 2700.0, 2800.0, 3200.0, 3300.0,
	2500.0, 2400.0, 2300.0, 2200.0, 2200.0,
	2300.0, 3400.0, 3400.0, 3300.0, 3200.0,
	3100.0, 3000.0, 2900.0, 2800.0, 2700.0,
	3400.0, 3400.0, 3400.0, 3400.0, 3300.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	2100.0, 2100.0, 2200.0, 2300.0, 2400.0,
	2500.0, 2600.0, 2700.0, 2800.0, 2900.0,
	3000.0, 3100.0, 3200.0, 3300.0, 2100.0,
	3500.0, 3600.0, 3700.0, 3800.0, 3900.0,
	4000.0, 4100.0, 4200.0, 4300.0, 4400.0,
	4500.0, 4600.0, 4700.0, 4800.0, 4900.0,
	4900.0, 4900.0, 4900.0, 4900.0, 4900.0,
	4900.0, 4900.0, 4900.0, 4900.0, 4900.0,
	4900.0, 4900.0, 4900.0, 4900.0, 4900.0,
	3800.0, 3800.0, 3800.0, 3800.0, 3800.0,
	3800.0, 3800.0, 3800.0, 3800.0, 3800.0,
	4700.0, 4800.0, 3900.0, 4000.0, 4100.0,
	4200.0, 4300.0, 3900.0, 4000.0, 4900.0,
	4800.0, 4700.0, 4600.0, 4500.0, 4400.0,
	4900.0, 4800.0, 4700.0, 3800.0, 3800.0,
	3900.0, 4000.0, 4100.0, 4200.0, 4300.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	2100.0, 2100.0, 2100.0, 2100.0, 2100.0,
	2100.0, 2100.0, 3400.0, 3500.0, 3600.0,
	3700.0, 2000.0, 1900.0, 1800.0, 1700.0,
	1600.0, 1600.0, 1600.0, 1300.0, 1200.0,
	1100.0, 1000.0, 1600.0, 600.0, 500.0,
	400.0, 300.0, 0.0, 0.0, 0.0,
	

	// Level 3
	5000.0, 5100.0, 5200.0, 5300.0, 5400.0,
	5500.0, 5600.0, 5700.0, 5800.0, 5900.0,
	6000.0, 6100.0, 6200.0, 6300.0, 6400.0,

	5000.0, 5100.0, 5200.0, 5300.0, 5400.0,
	5500.0, 5600.0, 5700.0, 5800.0, 5900.0,
	6000.0, 6100.0, 6200.0, 6300.0, 6400.0,
	4900.0, 4800.0, 4700.0, 4600.0, 4500.0,
	4400.0, 4300.0, 4200.0, 4100.0, 4000.0,
	3900.0, 3800.0, 3700.0, 3600.0, 3500.0,
	
	3400.0, 5000.0, 5000.0, 5000.0, 5000.0,
	4900.0, 4800.0, 4700.0, 4600.0, 4500.0,
	4400.0, 4300.0, 4200.0, 4100.0, 4000.0,

	3900.0, 3800.0, 3700.0, 3600.0, 3500.0,
	3400.0, 3300.0, 3200.0, 3100.0, 3000.0,
	4900.0, 4800.0, 4700.0, 4600.0, 4500.0,
	4400.0, 4300.0, 4200.0, 4100.0, 4000.0,
	3900.0, 3800.0, 3700.0, 3600.0, 3500.0,
	3400.0, 3300.0, 3200.0, 3100.0, 3000.0,
	
	2800.0, 2800.0, 2800.0, 2800.0, 2800.0,
	2800.0, 2800.0, 2800.0, 2800.0, 2800.0,
	2800.0, 2800.0, 2800.0, 2800.0, 2800.0,
	
	3900.0, 3900.0, 3900.0, 3900.0, 3900.0,
	3900.0, 3900.0, 3900.0, 3900.0, 3900.0,
	3900.0, 3900.0, 3900.0, 3900.0, 3900.0,
	3900.0, 3900.0, 3900.0, 3900.0, 3900.0,
	
	3800.0, 3700.0, 3600.0, 3500.0, 3400.0,
	3300.0, 3200.0, 3100.0, 3000.0, 2900.0,
	2800.0, 2700.0, 2600.0, 2500.0, 2400.0,
	2300.0, 2200.0, 2100.0, 2000.0, 2900.0,
	1900.0, 1800.0, 1700.0, 1600.0, 1500.0,
	1400.0, 1300.0, 1200.0, 1100.0, 1000.0,

	2800.0, 2800.0, 2800.0, 2800.0, -500.0,

	3500.0, 3400.0, 3300.0, 3200.0, 3100.0,
	3000.0, 2900.0, 2800.0, 2700.0, 2600.0,
	2500.0, 2400.0, 2300.0, 2200.0, 2100.0,
	2000.0, 1900.0, 1800.0, 1700.0, 1600.0,

	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,

	900.0, 800.0, 700.0, 600.0, 500.0,
	900.0, 800.0, 700.0, 600.0, 500.0,
	900.0, 800.0, 700.0, 600.0, 500.0,

	1700.0, 1600.0, 1500.0, 1400.0, 1300.0,
	1200.0, 1100.0, 1000.0, 900.0, 800.0,
	700.0, 600.0, 500.0, 400.0, 300.0,
	200.0, 100.0, 0.0, -100.0, -200.0,
	1700.0, 1600.0, 1500.0, 1400.0, 1300.0,
	1200.0, 1100.0, 1000.0, 900.0, 800.0,
	700.0, 600.0, 500.0, 400.0, 300.0,
	200.0, 100.0, 0.0, -100.0, -200.0,
	1700.0, 1600.0, 1500.0, 1400.0, 1300.0,
	1200.0, 1100.0, 1000.0, 900.0, 800.0,
	700.0, 600.0, 500.0, 400.0, 300.0,
	200.0, 100.0, 0.0, -100.0, -200.0,
	-300.0, -300.0, -300.0, -400.0, -400.0,

	-400.0, -400.0, -400.0, -400.0, -400.0,
	-400.0, -400.0, -400.0, -400.0, -400.0,
	-400.0, -400.0, -400.0, -400.0, -400.0,
	-400.0, -400.0, -400.0, -300.0, -200.0,

	900.0, 800.0, 700.0, 600.0, 500.0,
	400.0, 300.0, 200.0, 100.0, 0.0,
	-100.0, -200.0, -300.0, -400.0, -500.0,

	1300.0, 1200.0, 100.0, 0.0, 4700.0,
	4600.0, 4500.0, 4400.0, 4300.0, 4200.0,
	4100.0, 4000.0, 3600.0, 3500.0, 3400.0,
	3300.0, 3200.0, 3100.0, 3000.0, 2900.0,

	-600.0, -700.0, -800.0, -900.0, -1000.0,
	-1000.0, -1100.0, -1200.0, -1300.0, -1400.0,

	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,
	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,
	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,

	-500.0, -500.0, -500.0, -500.0, -500.0,
	-500.0, -500.0, -500.0, -500.0, -500.0,
	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,

	-1300.0, -1200.0, -1100.0, -1000.0, -900.0,
	-1000.0, -900.0, -800.0, -700.0, -600.0,

	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,
	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,
	-1300.0, -1200.0, -1100.0, -1000.0, -900.0,
	-800.0, -700.0, -600.0, -500.0, -400.0,
	-300.0, -200.0, -100.0, 0.0, 100.0,

	-400.0, -300.0, -200.0, -100.0, 0.0,
	100.0, 200.0, 300.0, 400.0, 500.0,

	-400.0, -300.0, -200.0, -100.0, 0.0,
	100.0, 200.0, 300.0, 400.0, 500.0,
	600.0, 700.0, 800.0, 900.0, 1000.0,
	1100.0, 1200.0, 1300.0, 1400.0, 1500.0,
	1600.0, 1700.0, 1800.0, 1900.0, 2000.0,
	2100.0, 2200.0, 2300.0, 2400.0, 2500.0,
	2600.0, 2700.0, 2800.0, 2900.0, 3000.0,
	3100.0, 3200.0, 3300.0, 3400.0, 3500.0,
	3600.0, 3700.0, 3800.0, 3900.0, 4000.0,
	4100.0, 4200.0, 4300.0, 4400.0, 4500.0,

	-400.0, -300.0, -200.0, -100.0, 0.0,
	100.0, 200.0, 300.0, 400.0, 500.0,
	600.0, 700.0, 800.0, 900.0, 1000.0,
	1100.0, 1200.0, 1300.0, 1400.0, 1500.0,
	1600.0, 1700.0, 1800.0, 1900.0, 2000.0,
	2100.0, 2200.0, 2300.0, 2400.0, 2500.0,
	2600.0, 2700.0, 2800.0, 2900.0, 3000.0,
	3100.0, 3200.0, 3300.0, 3400.0, 3500.0,
	3600.0, 3700.0, 3800.0, 3900.0, 4000.0,
	4100.0, 4200.0, 4300.0, 4400.0, 4500.0,

	-400.0, -300.0, -200.0, -100.0, 0.0,
	100.0, 200.0, 300.0, 400.0, 500.0,
	600.0, 700.0, 800.0, 900.0, 1000.0,
	1100.0, 1200.0, 1300.0, 1400.0, 1500.0,
	1600.0, 1700.0, 1800.0, 1900.0, 2000.0,
	2100.0, 2200.0, 2300.0, 2400.0, 2500.0,
	2600.0, 2700.0, 2800.0, 2900.0, 3000.0,
	3100.0, 3200.0, 3300.0, 3400.0, 3500.0,
	3600.0, 3700.0, 3800.0, 3900.0, 4000.0,
	4100.0, 4200.0, 4300.0, 4400.0, 4500.0,

	200.0, 300.0, 400.0, 500.0, 600.0,
	700.0, 800.0, 900.0, 1000.0, 1100.0,
	1200.0, 1300.0, 1400.0, 1500.0, 1600.0,
	1700.0, 1800.0, 1900.0, 2000.0, 2100.0,
	2200.0, 2300.0, 2400.0, 2500.0, 2600.0,
	2700.0, 2800.0, 2900.0, 3000.0, 3100.0,
	3200.0, 3300.0, 3400.0, 3500.0, 3600.0,
	3700.0, 3800.0, 3900.0, 4000.0, 4100.0,
	4200.0, 4300.0, 4400.0, 4500.0, 4600.0,
	4700.0, 4800.0, 4900.0, 5000.0, 5100.0,

	4000.0, 4100.0, 4200.0, 4300.0, 4400.0,
	4500.0, 4500.0, 4500.0, 4500.0, 4500.0,

	1000.0, 1100.0, 1200.0, 1300.0, 1400.0,
	-400.0, -300.0, -200.0, -100.0, 0.0,

	1200.0, 1200.0, 1200.0, 1200.0, 1200.0,
	1300.0, 1400.0, 1500.0, 1600.0, 1700.0,

	1800.0, 1900.0, 2000.0, 2100.0, 2200.0,
	2300.0, 2400.0, 2500.0, 2600.0, 2700.0,

	3100.0, 3200.0, 3300.0, 3400.0, 3500.0,
	3000.0, 3100.0, 3200.0, 3300.0, 3400.0,

	3700.0, 3800.0, 3900.0, 4000.0, 4100.0,
	2600.0, 2500.0, 2200.0, 2100.0, 4500.0,

	4500.0, 4500.0, 4500.0, 4600.0, 4700.0,
	4800.0, 4900.0, 5000.0, 5100.0, 5200.0,
	5300.0, 5400.0, 5500.0, 5600.0, 5700.0,
	5800.0, 5900.0, 6000.0, 6100.0, 6200.0,
	6300.0, 6400.0, 6400.0, 6400.0, 6400.0,

	6400.0, 6400.0, 6400.0, 6400.0, 6400.0,
	6400.0, 6400.0, 6400.0, 6400.0, 6400.0,
	6400.0, 6400.0, 6400.0, 6400.0, 6400.0,
	6400.0, 6400.0, 6400.0, 6400.0, 6400.0,
	6400.0, 6400.0, 6400.0, 6400.0, 6400.0,

	5200.0, 5300.0, 5400.0, 5500.0, 5600.0,
	5100.0, 5100.0, 5100.0, 5100.0, 5100.0,
	5100.0, 5100.0, 5100.0, 5100.0, 5100.0,

	6300.0, 6200.0, 6100.0, 5900.0, 5800.0,
	5400.0, 5500.0, 5600.0, 5900.0, 6000.0,

	6400.0, 6400.0, 6400.0, 6400.0, 6400.0,
	6300.0, 6200.0, 6100.0, 6000.0, 5900.0,
	5800.0, 5700.0, 5600.0, 5500.0, 5400.0,
	5300.0, 5200.0, 5100.0, 5000.0, 4900.0,
	4800.0, 4700.0, 4600.0, 4500.0, 4400.0,
	4300.0, 4200.0, 4100.0, 4000.0, 3900.0,
	3800.0, 3700.0, 3600.0, 3500.0, 3400.0,
	3300.0, 3200.0, 3100.0, 3000.0, 2900.0,
	2800.0, 2700.0, 2600.0, 2500.0, 2400.0,
	2300.0, 2200.0, 2100.0, 2000.0, 1900.0,

	5100.0, 5100.0, 5100.0, 5100.0, 5100.0,
	6100.0, 6000.0, 5900.0, 5800.0, 5700.0,

	5400.0, 5300.0, 5200.0, 5100.0, 5000.0,
	4900.0, 4800.0, 4700.0, 4600.0, 4500.0,

	5000.0, 4900.0, 4800.0, 4700.0, 4600.0,
	4500.0, 4400.0, 4300.0, 4200.0, 4100.0,
	4000.0, 3900.0, 3800.0, 3700.0, 3600.0,
	3500.0, 3400.0, 3300.0, 3200.0, 3100.0,
	3000.0, 2900.0, 2800.0, 2700.0, 2600.0,
	2500.0, 2400.0, 2300.0, 2200.0, 2100.0,
	2000.0, 1900.0, 1800.0, 1700.0, 1600.0,
	1500.0, 1400.0, 1300.0, 1200.0, 1100.0,
	1000.0, 900.0, 800.0, 700.0, 600.0,
	500.0, 400.0, 300.0, 200.0, 100.0,
	0.0, -100.0, -200.0, -300.0, -400.0,
	-500.0, -600.0, -700.0, -800.0, -900.0,
	-1000.0, -1100.0, -1200.0, -1300.0, -1400.0,
	
	1800.0, 1700.0, 1600.0, 1500.0, 1400.0,
	1300.0, 1200.0, 1100.0, 1000.0, 900.0,
	800.0, 700.0, 600.0, 500.0, 400.0,
	300.0, 200.0, 100.0, 0.0, -100.0,
	200.0, 200.0, 200.0, 200.0, 200.0,
	200.0, 200.0, 200.0, 200.0, 200.0,

	4200.0, 4100.0, 4000.0, 3900.0, 3800.0,

	3500.0, 3400.0, 3300.0, 3200.0, 3100.0,
	3500.0, 3400.0, 3300.0, 3200.0, 3100.0,
	3500.0, 3500.0, 3500.0, 3000.0, 3000.0,

	2700.0, 2600.0, 2500.0, 2400.0, 2300.0,

	2200.0, 2100.0, 1700.0, 1600.0, 1200.0,
	1100.0, 1400.0, 1300.0, 1200.0, 1100.0,

	2000.0, 1900.0, 1800.0, 1700.0, 1600.0,

	-1000.0, -900.0, -800.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Queen Bee Boss

	4000.0, 4100.0, 5800.0, 5900.0, 4200.0, 
	4300.0, 6100.0, 6200.0,
	
	// X Boss
	-1500.0, -1600.0, -1700.0, -1800.0, -1900.0,
	-2000.0, -2100.0, -2200.0, -2300.0, -2400.0,
	-2500.0, -2600.0, -2700.0, -2800.0, -2900.0,
	-3000.0, -3100.0, -3200.0, -3300.0, -3400.0,
	-3500.0, -3600.0, -3700.0, -3800.0, -3900.0,
	
	-3900.0, -3900.0, -3900.0, -3900.0, -3900.0, 
	-3900.0, -3900.0, -3900.0, -3900.0, -3900.0,
	-3900.0, -3900.0, -3900.0, -3900.0, -3900.0,

	-2200.0, -2200.0, -2200.0, -2200.0, -2200.0, 
	-2200.0, -2200.0,
	-2200.0, -2200.0, -2200.0, -2200.0, -2200.0,

	-2200.0, -2200.0, -2300.0, -2400.0, -2500.0,
	-2600.0, -2700.0, -2800.0, -2900.0, -3000.0,
	-3100.0, -3200.0, -3300.0, -3400.0, -3500.0,
	-3600.0, -3700.0, -3800.0, -3900.0, -3900.0
};

float platformsY[NUMPLATFORMS] = {
	// Level 1
	930.0, 785.0, 735.0, 695.0, 680.0, 
	600.0, 800.0, 800.0, 950.0, 950.0,
	700.0, 700.0, 700.0, 900.0, 880.0,
	900.0, 900.0, 900.0, 900.0, 900.0,
	600.0, 600.0, 750.0, 600.0, 600.0,
	900.0, 900.0, 900.0, 900.0, 900.0,
	900.0, 900.0, 900.0, 900.0, 900.0,
	900.0, 900.0, 900.0, 900.0, 900.0, 
	900.0, 900.0,

	//Level 2
	900.0, 900.0, 900.0, 900.0, 900.0,
	900.0, 900.0, 900.0, 900.0, 900.0,
	900.0, 900.0, 900.0, 900.0, 900.0,
	900.0, 900.0, 900.0, 900.0, 900.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1100.0, 1100.0, 1400.0, 1300.0, 1200.0,
	1100.0, 1000.0, 900.0, 800.0, 700.0,
	600.0, 500.0, 400.0, 300.0, 200.0,
	100.0, 0.0, -100.0, -200.0, -300.0,
	-400.0, -500.0, -600.0, -700.0, -800.0,
	800.0, 700.0, 600.0, 500.0, 400.0,
	300.0, 200.0, 100.0, 0.0, -100.0,
	-200.0, -300.0, -400.0, -500.0, -600.0,
	-700.0, -800.0, -900.0, -900.0, -900.0,
	-900.0, -900.0, -800.0, -800.0, -800.0,
	800.0, 800.0, 300.0, 300.0, -300.0, 
	-300.0, -900.0, -1000.0, -1100.0, -1200.0,
	-900.0, -900.0, -900.0, -900.0, -900.0,
	-900.0, -900.0, -900.0, -900.0, -900.0,
	-900.0, -900.0, -900.0, -900.0, -900.0,
	-1000.0, -1100.0, -1200.0, -1300.0, -1400.0,
	-1500.0, -1600.0, -1700.0, -1800.0, -1900.0,
	-1300.0, -1400.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1300.0,
	-2000.0, -2100.0, -2200.0, -2300.0, -2400.0,
	-2500.0, -2600.0, -2700.0, -2800.0, -2900.0,
	-1600.0, -1700.0, -1800.0, -1900.0, -2000.0,
	-2100.0, -2200.0, -2300.0, -2400.0, -2500.0,
	-2100.0, -2100.0, -2100.0, -1900.0, -1900.0,
	-2100.0, -2100.0, -2100.0, -2100.0, -2500.0,
	-2500.0, -2600.0, -2700.0, -2700.0, -2700.0,
	-2700.0, -2700.0, -2700.0, -2700.0, -2700.0,
	-2800.0, -2900.0, -3000.0, -3100.0, -3100.0,
	-3000.0, -3100.0, -3200.0, -3300.0, -3400.0,
	-3500.0, -4800.0, -4800.0, -4800.0, -4800.0,
	-4800.0, -4800.0, -4800.0, -4800.0, -4800.0,
	-4800.0, -4800.0, -4800.0, -4800.0, -3600.0,
	-3100.0, -3100.0, -3100.0, -3100.0, -3100.0,
	-3100.0, -3100.0, -3100.0, -3100.0, -3100.0,
	-3100.0, -3100.0, -3100.0, -3100.0, -3100.0,
	-3200.0, -3300.0, -3400.0, -3500.0, -3600.0,
	-3700.0, -3800.0, -3900.0, -4000.0, -4100.0,
	-4200.0, -4300.0, -4400.0, -4500.0, -4600.0,
	-3700.0, -3800.0, -3900.0, -4000.0, -4100.0,
	-4200.0, -4300.0, -4400.0, -4500.0, -4600.0,
	-3500.0, -3500.0, -3700.0, -3700.0, -3700.0,
	-3700.0, -3700.0, -4100.0, -4100.0, -4300.0,
	-4300.0, -4300.0, -4300.0, -4300.0, -4300.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4800.0,
	-4800.0, -4800.0, -4800.0, -4800.0, -4800.0,
	-3600.0, -3700.0, -3800.0, -3900.0, -4000.0,
	-4100.0, -4200.0, -4300.0, -4400.0, -4500.0,
	-4600.0, -4700.0, -4800.0, -4800.0, -4800.0,
	-4800.0, -4800.0, -4800.0, -4800.0, -4800.0,
	-4900.0, -5000.0, -5100.0, -4800.0, -4800.0,
	-4800.0, -4800.0, -5100.0, -4800.0, -4800.0,
	-4800.0, -4800.0, -4900.0, -5000.0, -5100.0,

	// Level 3
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,

	800.0, 800.0, 800.0, 800.0, 800.0,
	800.0, 800.0, 800.0, 800.0, 800.0,
	800.0, 800.0, 800.0, 800.0, 800.0,
	800.0, 800.0, 800.0, 800.0, 800.0,
	800.0, 800.0, 800.0, 800.0, 800.0,
	800.0, 800.0, 800.0, 800.0, 800.0,

	800.0, 1600.0, 1700.0, 1800.0, 1900.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,

	1900.0, 1800.0, 1700.0, 1600.0, 1500.0,
	1400.0, 1300.0, 1200.0, 1100.0, 1000.0,
	900.0, 800.0, 700.0, 600.0, 500.0,

	700.0, 600.0, 500.0, 400.0, 300.0,
	200.0, 100.0, 0.0, -100.0, -200.0,
	-300.0, -400.0, -500.0, -600.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,

	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,

	400.0, 300.0, 200.0, 100.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	100.0, 200.0, 300.0, 400.0, 500.0,
	600.0, 700.0, 800.0, 900.0, 1000.0,
	1100.0, 1200.0, 1300.0, 1400.0, 1500.0,
	1600.0, 1700.0, 1800.0, 1900.0, 2000.0,

	-300.0, -300.0, -300.0, -300.0, -300.0,
	500.0, 500.0, 500.0, 500.0, 500.0,
	1300.0, 1300.0, 1300.0, 1300.0, 1300.0,

	1700.0, 1700.0, 1700.0, 1700.0, 1700.0,
	1700.0, 1700.0, 1700.0, 1700.0, 1700.0,
	1700.0, 1700.0, 1700.0, 1700.0, 1700.0,
	1700.0, 1700.0, 1700.0, 1700.0, 1700.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1800.0, 1800.0, 1800.0, 1800.0, 1800.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1900.0, 1900.0, 1900.0, 1900.0, 1900.0,
	1700.0, 1800.0, 1900.0, 1900.0, 1800.0,

	1700.0, 1600.0, 1500.0, 1400.0, 1300.0,
	1200.0, 1100.0, 1000.0, 900.0, 800.0,
	700.0, 600.0, 500.0, 400.0, 300.0,
	200.0, 100.0, 0.0, 0.0, 0.0,

	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,

	0.0, 0.0, 1100.0, 1100.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,
	1500.0, 1500.0, 1500.0, 1500.0, 1500.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, -100.0, -200.0, -300.0, -400.0,
	-500.0, -600.0, -700.0, -800.0, -900.0,
	-1000.0, -1100.0, -1200.0, -1300.0, -1400.0,

	-800.0, -900.0, -1000.0, -1100.0, -1200.0,
	-1300.0, -1400.0, -1500.0, -1600.0, -1700.0,
	-1400.0, -1500.0, -1600.0, -1700.0, -1800.0,

	-1100.0, -1100.0, -1100.0, -1100.0, -1100.0,
	-700.0, -700.0, -700.0, -700.0, -700.0,

	-1500.0, -1600.0, -1700.0, -1800.0, -1900.0,
	-2000.0, -2100.0, -2200.0, -2300.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,

	-1700.0, -1700.0, -1700.0, -1700.0, -1700.0,
	-1700.0, -1700.0, -1700.0, -1700.0, -1700.0,

	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,
	-800.0, -800.0, -800.0, -800.0, -800.0,

	-900.0, -900.0, -900.0, -900.0, -900.0,
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0, 
	-900.0, -900.0, -900.0, -900.0, -900.0,

	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0,
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0, 
	-1000.0, -1000.0, -1000.0, -1000.0, -1000.0,

	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,

	-700.0, -700.0, -700.0, -700.0, -700.0,
	-700.0, -800.0, -900.0, -1000.0, -1100.0,

	-1400.0, -1400.0, -1400.0, -1400.0, -1400.0,
	-1300.0, -1300.0, -1300.0, -1300.0, -1300.0,

	-1900.0, -2000.0, -2100.0, -2200.0, -2300.0,
	-2000.0, -2000.0, -2000.0, -2000.0, -2000.0,

	-1100.0, -1100.0, -1100.0, -1100.0, -1100.0,
	-1100.0, -1100.0, -1100.0, -1100.0, -1100.0,

	-1200.0, -1200.0, -1200.0, -1200.0, -1200.0,
	-1900.0, -1900.0, -1900.0, -1900.0, -1900.0,

	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1700.0, -1700.0, -1700.0, -1700.0, -1200.0,

	-1300.0, -1400.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1500.0, -1500.0,
	-1500.0, -1500.0, -1500.0, -1600.0, -1700.0,

	-1800.0, -1900.0, -2000.0, -2100.0, -2200.0,
	-2300.0, -2400.0, -2500.0, -2600.0, -2700.0,
	-2800.0, -2900.0, -3000.0, -3100.0, -3200.0,
	-3300.0, -3400.0, -3500.0, -3600.0, -3700.0,
	-3800.0, -3900.0, -4000.0, -4100.0, -4200.0,

	-2400.0, -2400.0, -2400.0, -2400.0, -2400.0,
	-2500.0, -2600.0, -2700.0, -2800.0, -2900.0,
	-3000.0, -3100.0, -3200.0, -3300.0, -3400.0,

	-1900.0, -1900.0, -1900.0, -2100.0, -2100.0,
	-3000.0, -3000.0, -3000.0, -3300.0, -3300.0,

	-4300.0, -4400.0, -4500.0, -4600.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0, 
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0, 
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0, 
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,

	-3500.0, -3600.0, -3700.0, -3800.0, -3900.0,
	-4000.0, -4000.0, -4000.0, -4000.0, -4000.0,

	-4000.0, -4000.0, -4000.0, -4000.0, -4000.0,
	-4000.0, -4000.0, -4000.0, -4000.0, -4000.0,

	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0,
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0,
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0,
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0,
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0, 
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4700.0, -4700.0, -4700.0, -4700.0, -4700.0,
	-4600.0, -4500.0, -4400.0, -4300.0, -4200.0, 
	-4100.0, -4000.0, -3900.0, -3800.0, -3700.0,

	-3500.0, -3500.0, -3500.0, -3500.0, -3500.0,

	-3700.0, -3700.0, -3700.0, -3700.0, -3700.0,
	-4300.0, -4300.0, -4300.0, -4300.0, -4300.0,
	-4400.0, -4500.0, -4600.0, -4300.0, -4200.0,

	-3500.0, -3500.0, -3500.0, -3500.0, -3500.0,
	-4000.0, -4000.0, -4000.0, -4000.0, -4000.0,
	-4000.0, -3500.0, -3500.0, -3500.0, -3500.0,

	-3500.0, -3500.0, -3500.0, -3500.0, -3500.0,

	-1700.0, -1700.0, -1700.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Queen Bee Boss
	-11500.0, -11500.0, -11200.0, -11200.0, -10800.0, 
	-10800.0, -10400.0, -10400.0,

	// X Boss

	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0,
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0, 
	-3200.0, -3200.0, -3200.0, -3200.0, -3200.0,

	-3300.0, -3400.0, -3500.0, -3600.0, -3700.0, 
	-3800.0, -3900.0, -4000.0, -4100.0, -4200.0,
	-4300.0, -4400.0, -4500.0, -4600.0, -4700.0,
	-3600.0, -3700.0, -3800.0, -3900.0, -4000.0, 
	-4100.0, -4200.0,
	-4300.0, -4400.0, -4500.0, -4600.0, -4700.0,

	-4800.0, -4900.0, -4900.0, -4900.0, -4900.0, 
	-4900.0, -4900.0, -4900.0, -4900.0, -4900.0, 
	-4900.0, -4900.0, -4900.0, -4900.0, -4900.0, 
	-4900.0, -4900.0, -4900.0, -4900.0, -4800.0

};

float platformsvelX[NUMPLATFORMS] = {

	// Level 1
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0,

	// Level 2
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Level 3
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,

	4.0, 4.0, 4.0, 4.0, 4.0,
	4.0, 4.0, 4.0, 4.0, 4.0,
	4.0, 4.0, 4.0, 4.0, 4.0,
	4.0, 4.0, 4.0, 4.0, 4.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, -4.0,
	-4.0, -4.0, -4.0, -4.0, -4.0,
	-4.0, -4.0, -4.0, -4.0, -4.0,
	-4.0, -4.0, -4.0, -4.0, -4.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 8.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	-6.0, -6.0, -6.0, -6.0, -6.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,	
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	
	8.0, 8.0, 8.0, 8.0, 8.0,
	8.0, 8.0, 8.0, 8.0, 8.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	10.0, 10.0, 10.0, 10.0, 10.0,
	10.0, 10.0, 10.0, 10.0, 10.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	10.0, 10.0, 10.0, 10.0, 10.0,
	15.0, 15.0, 18.0, 18.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	12.0, 12.0, 12.0, 15.0, 15.0,
	-3.0, -3.0, -3.0, 20.0, 20.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	-12.0, -12.0, -12.0, -12.0, -12.0, 
	-12.0, -12.0, -12.0, -12.0, -12.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	15.0, 15.0, 15.0, 15.0, 15.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	15.0, 15.0, 15.0, 15.0, 15.0,
	15.0, 15.0, 15.0, 15.0, -15.0,
	-15.0, -12.0, -12.0, -12.0, -12.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Queen Bee Boss
	-8.0, -8.0, 6.0, 6.0, -5.0, 
	-5.0, 4.0, 4.0,

	// X Boss

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0
};

float platformsvelY[NUMPLATFORMS] = {

	// Level 1
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0,

	// Level 2
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Level 3
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,

	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	3.0, 3.0, -3.0, -3.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,

	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,

	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,
	1.5, 1.5, 1.5, 1.5, 1.5,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0,

	// X Boss

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0

};

float platformswidth[NUMPLATFORMS] = {
	
	// Level 1
	3000.0, 500.0, 500.0, 760.0, 220.0, 
	250.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 600.0, 700.0, 400.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 700.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0,

	//Level 2
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	

	// Level 3
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Queen Bee Boss
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0,

	// X Boss

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0

};

float platformsheight[NUMPLATFORMS] = {
	
	// Level 1
	100.0, 150.0, 50.0, 40.0, 230.0, 
	300.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 250.0, 20.0, 130.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 200.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0,

	// Level 2
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	
	// Level 3
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0,

	0.0, 0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0,

	// Queen Bee Boss
	100.0, 100.0, 100.0, 100.0, 100.0, 
	100.0, 100.0, 100.0,

	// X Boss
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,

	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0,
	100.0, 100.0, 100.0, 100.0, 100.0
};

int platformstypes[NUMPLATFORMS] = {
	// Level 1
	0, 1, 1, 1, 2, 
	1, 3, 3, 3, 3,
	3, 3, 1, 2, 1,
	3, 3, 3, 3, 3,
	3, 3, 2, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3,

	//Level 2
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	

	// Level 3
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,

	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,

	12, 10, 10, 10, 10,
	10, 10, 10, 10, 10,
	10, 10, 10, 10, 10,
	10, 10, 10, 10, 11,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	7, 9, 8, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	5, 5, 5, 5, 15,
	13, 13, 13, 13, 13,
	13, 14, 15, 13, 13,
	13, 13, 13, 13, 14,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 11,
	3, 3, 3, 3, 3,

	14, 13, 13, 13, 15,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	10, 10, 10, 10, 10,
	10, 10, 10, 10, 12,

	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,

	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,
	9, 8, 9, 8, 9,
	8, 9, 8, 9, 8,

	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,
	7, 6, 7, 6, 7,
	6, 7, 6, 7, 6,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	11, 10, 10, 10, 10,
	10, 10, 10, 10, 12,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	11, 10, 10, 10, 12,
	12, 11, 12, 11, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	12, 10, 11, 12, 11,
	14, 13, 15, 11, 12,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	15, 13, 13, 13, 13,
	13, 13, 13, 13, 14,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	12, 10, 10, 10, 11,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	12, 10, 10, 10, 11,
	12, 11, 12, 11, 15,
	14, 15, 13, 13, 14,

	3, 3, 3, 3, 3,
	3, 3, 3,

	0, 0, 0, 0, 0,
	0, 0, 0, 0, 0,

	// Queen Bee Boss
	4, 4, 4, 4, 4, 
	4, 4, 4,

	// X Boss
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3,
	3, 3, 3, 3, 3,

	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3,
	3, 3, 3, 3, 3
};


/*========================================================================


========================================================================*/

PlatformHandler::PlatformHandler()
{
	for (int i = 0; i < NUMPLATFORMS; i++)
	{
		if (i <= 42)
		{
			platformarray[i] = new Platform(platformsX[i], platformsY[i], platformswidth[i], platformsheight[i], platformstypes[i], true, platformsvelX[i], platformsvelY[i]);
		}
		else if (i <= 367)
		{
			platformarray[i] = new Platform(platformsX[i] + 12300.0, platformsY[i], platformswidth[i], platformsheight[i], platformstypes[i], true, platformsvelX[i], platformsvelY[i]);
		}
		else if (i < 1340 || i > 1347)
		{
			platformarray[i] = new Platform(platformsX[i] - 6500.0 + 12300.0, platformsY[i] - 6700.0, platformswidth[i], platformsheight[i], platformstypes[i], true, platformsvelX[i], platformsvelY[i]);
		}
		else
		{
			platformarray[i] = new Platform(platformsX[i], platformsY[i], platformswidth[i], platformsheight[i], platformstypes[i], true, platformsvelX[i], platformsvelY[i]);
		}
		if (i >= 315+42+325 && i <= 318+42+325)
		{
			(*platformarray[i]).settoprange(0.0 - 6700.0);
			(*platformarray[i]).setbottomrange(1200.0 - 6700.0);
		}

	}
	numvisible = 0;
}

/*========================================================================


========================================================================*/

void PlatformHandler::animatePlatforms()
{
	for (int i = platformsmin; i < platformsmax; i++)
	{
		(*platformarray[i]).animate();
	}
}

/*========================================================================


========================================================================*/

void PlatformHandler::drawPlatforms()
{
	Reyk* player1 = players[clientIndex];

	if (gamestatus == 5)
	{
		platformsmin = 1348;
	}

	numvisible = 0;
	for (int i = platformsmin; i < platformsmax; i++)
	{
		if (((*platformarray[i]).getX()+(*platformarray[i]).getwidth() - (player1->getXmod()) > 0.0 
			&& ((*platformarray[i]).getX() - (player1->getXmod()) < 2560.0
			&& ((*platformarray[i]).getY()+(*platformarray[i]).getheight()- (player1->getYmod()) > 0.0
			&& ((*platformarray[i]).getY() - (player1->getYmod()) < 2048.0)))))
		{
			numvisible++;
			(*platformarray[i]).drawPlatform();
		}
	}
}

void PlatformHandler::drawPlatforms3D()
{
	Reyk* player1 = players[clientIndex];

	numvisible = 0;
	for (int i = platformsmin; i < platformsmax; i++)
	{
		if (((*platformarray[i]).getX()+(*platformarray[i]).getwidth() - (player1->getXmod()) > 0.0 
			&& ((*platformarray[i]).getX() - (player1->getXmod()) < 2560.0
			&& ((*platformarray[i]).getY()+(*platformarray[i]).getheight()- (player1->getYmod()) > 0.0
			&& ((*platformarray[i]).getY() - (player1->getYmod()) < 2048.0)))))
		{
			numvisible++;
			(*platformarray[i]).drawPlatform3D();
		}
	}
}

/*========================================================================


========================================================================*/

void PlatformHandler::movePlatforms()
{
	for (int i = platformsmin; i < platformsmax; i++)
	{
		if ((*platformarray[i]).getramp() == 4)
		{
			(*platformarray[i]).movePlatform((*platformarray[i]).getvelX(), 0.0);
			if ((*platformarray[i]).getX() >= 6000.0 && (*platformarray[i]).getvelX() > 0.0)
			{
				(*platformarray[i]).movePlatform(-2000.0, 0.0);
			}
			else if ((*platformarray[i]).getX() <= 4000.0 && (*platformarray[i]).getvelX() < 0.0)
			{
				(*platformarray[i]).movePlatform(2000.0, 0.0);
			}
		}
		else if ((*platformarray[i]).getramp() == 5)
		{
			(*platformarray[i]).movePlatform(0.0, (*platformarray[i]).getvelY());
		}
	}
}

/*========================================================================


========================================================================*/

void PlatformHandler::checkAllPlatformsCollision(Reyk* player1)
{
	RECT feet = player1->getJumpHitbox();

	for (int i = platformsmin; i < platformsmax; i++)
	{
		if ((*platformarray[i]).getramp() == 0 || (*platformarray[i]).getramp() == 3 
			|| (*platformarray[i]).getramp() == 4 || (*platformarray[i]).getramp() == 5
			|| ((*platformarray[i]).getramp() >= 6 && (*platformarray[i]).getramp() <= 15))
		{
			if (!player1->getgrounded())
			{
				if ((*platformarray[i]).detectPlatformCollision(feet) && player1->getvelY() > 0)
				{
				
					if ((player1->getStatus() == 3 || player1->getStatus() == 4 
						|| player1->getStatus() == 5 || player1->getStatus() == 7 
						|| player1->getStatus() == 9 || player1->getStatus() == 11)  
						&&  player1->getvelY() > 0)
					{
						if ((*platformarray[i]).getramp() == 4
							|| ((*platformarray[i]).getramp() >= 10 && (*platformarray[i]).getramp() <= 15))
						{
							player1->setgroundedvelX((*platformarray[i]).getvelX());
						}
						else if ((*platformarray[i]).getramp() == 5
							|| ((*platformarray[i]).getramp() >= 6 && (*platformarray[i]).getramp() <= 9))
						{
							player1->setgroundedvelY((*platformarray[i]).getvelY());
						}
						player1->Reyk_Land((*platformarray[i]).getX(), (*platformarray[i]).getX()+(*platformarray[i]).getwidth(),(*platformarray[i]).getY());
					}	
					return;
				}
			}
			if ((player1->getStatus() == 1 || player1->getStatus() == 0 
				|| player1->getStatus() == 2 || player1->getStatus() == 6 
				|| player1->getStatus() == 10) 
				&& (*platformarray[i]).detectPlatformCollision(feet))
			{
				player1->setplatformleft((*platformarray[i]).getX());
				player1->setplatformright((*platformarray[i]).getX()+(*platformarray[i]).getwidth());
				if ((*platformarray[i]).getramp() == 4)
				{
					player1->setgroundedvelX((*platformarray[i]).getvelX());
				}
				else if ((*platformarray[i]).getramp() == 5
						|| ((*platformarray[i]).getramp() >= 6 && (*platformarray[i]).getramp() <= 9))
				{
					player1->setgroundedvelY((*platformarray[i]).getvelY());
				}
				return;
			}
		}
		else
		{
			if (!player1->getgrounded())
			{
				if ((*platformarray[i]).detectRampCollision(player1->getFeetPoint()) && player1->getvelY() > 0)
				{
					if ((player1->getStatus() == 3 || player1->getStatus() == 4 
						|| player1->getStatus() == 5 || player1->getStatus() == 7 
						|| player1->getStatus() == 11))
					{
						player1->Reyk_Land((*platformarray[i]).getX(), (*platformarray[i]).getX()+(*platformarray[i]).getwidth(),(*platformarray[i]).getYInt(player1->getFeetPoint().left));
					}
					return;
				}
			}
			if ((player1->getStatus() == 0 || player1->getStatus() == 1 || player1->getStatus() == 2 || player1->getStatus() == 6 || player1->getStatus() == 10)
				&& (*platformarray[i]).detectRampCollision(player1->getFeetPoint()))
			{
				player1->setplatformleft((*platformarray[i]).getX());
				player1->setplatformright((*platformarray[i]).getX()+(*platformarray[i]).getwidth());
				player1->setSendPacket(false);
				player1->setY((*platformarray[i]).getYInt(player1->getFeetPoint().left) - 274.0);
				player1->setMapY((*platformarray[i]).getYInt(player1->getFeetPoint().left) - 274.0);
				player1->setSendPacket(true);
				return;
			}
		}
	}
	
	if (player1->getgrounded())
	{
		player1->setgrounded(false);

		player1->setSendPacket(false);
		player1->setStatus(3);
		player1->setSendPacket(true);
	}
}

/*========================================================================


========================================================================*/

bool PlatformHandler::enemyCheckAllPlatformsCollision(RECT r)
{
	int platformmax = 41;

	for (int i = platformsmin; i < platformsmax; i++)
	{
		if ((*platformarray[i]).getramp() == 0 || (*platformarray[i]).getramp() == 3)
		{
			if ((*platformarray[i]).detectPlatformCollision(r))
			{
				return true;
			}
		}
		else
		{
			if ((*platformarray[i]).detectRampCollision(r))
			{
				return true;
			}
		}

	}
	return false;
}

/*========================================================================


========================================================================*/

bool PlatformHandler::checkAllPlatformsRightCollision(Reyk* player1)
{

	RECT right = player1->getRightHitbox();
	for (int i = platformsmin; i < platformsmax; i++)
	{
		if (((*platformarray[i]).getramp() >= 6 && (*platformarray[i]).getramp() <= 9)
			|| ((*platformarray[i]).getramp() >= 0 && (*platformarray[i]).getramp() <= 2))
		{
			continue;
		}

		if ((*platformarray[i]).detectPlatformCollision(right))
		{
			if (player1->getpressingright())
			{
				if (player1->getStatus() != 1 && player1->getStatus() != 5 && player1->getvelX() >= 0.0)
				{
					if ((*platformarray[i]).getramp() == 4 || (*platformarray[i]).getramp() == 5)
					{
						player1->Reyk_StartSliding((*platformarray[i]).getvelX(), -1.0 * (*platformarray[i]).getvelY());
					}
					else
					{
						player1->Reyk_StartSliding(0.0, 0.0);
					}
				}
			}
		return true;		
		}
	}
	return false;
}

/*========================================================================


========================================================================*/

bool PlatformHandler::checkAllPlatformsLeftCollision(Reyk* player1)
{
	
	RECT left = player1->getLeftHitbox();
	for (int i = platformsmin; i < platformsmax; i++)
	{
		if ((*platformarray[i]).detectPlatformCollision(left))
		{
			if (((*platformarray[i]).getramp() >= 6 && (*platformarray[i]).getramp() <= 9)
			|| ((*platformarray[i]).getramp() >= 0 && (*platformarray[i]).getramp() <= 2))
			{
				continue;
			}

			if (player1->getpressingleft())
			{
				if (player1->getStatus() != 1 && player1->getStatus() != 5 && player1->getvelX() >= 0.0)
				{
					if ((*platformarray[i]).getramp() == 4)
					{
						player1->Reyk_StartSliding((*platformarray[i]).getvelX(), -1.0 * (*platformarray[i]).getvelY());
					}
					else
					{
						player1->Reyk_StartSliding(0.0, 0.0);
					}
				}
			}
			return true;
		}
	}
	return false;
}

/*========================================================================


========================================================================*/

void PlatformHandler::end()
{
	for (int i = 0; i < NUMPLATFORMS; i++)
	{
		delete platformarray[i];
	}
}

/*========================================================================


========================================================================*/

int PlatformHandler::getnumvisible()
{
	return numvisible;
}
	